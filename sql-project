CREATE SCHEMA `devcamp_sql_project`

CREATE TABLE `devcamp_sql_project`.`students` (
  `students_id` INT NOT NULL AUTO_INCREMENT,
  `students_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`students_id`),
  UNIQUE INDEX `students_id_UNIQUE` (`students_id` ASC) VISIBLE);

CREATE TABLE `devcamp_sql_project`.`professors` (
  `professors_id` INT NOT NULL AUTO_INCREMENT,
  `professors_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`professors_id`),
  UNIQUE INDEX `professors_id_UNIQUE` (`professors_id` ASC) VISIBLE);

CREATE TABLE `devcamp_sql_project`.`course` (
  `course_id` INT NOT NULL AUTO_INCREMENT,
  `course_name` VARCHAR(45) NOT NULL,
  `course_professors_id` INT NULL,
  PRIMARY KEY (`course_id`),
  UNIQUE INDEX `course_id_UNIQUE` (`course_id` ASC) VISIBLE);
ALTER TABLE `devcamp_sql_project`.`course` 
ADD INDEX `course_professors_id_idx` (`course_professors_id` ASC) VISIBLE;
;
ALTER TABLE `devcamp_sql_project`.`course` 
ADD CONSTRAINT `course_professors_id`
  FOREIGN KEY (`course_professors_id`)
  REFERENCES `devcamp_sql_project`.`professors` (`professors_id`)
  ON DELETE CASCADE
  ON UPDATE NO ACTION;

CREATE TABLE `devcamp_sql_project`.`grades` (
  `grades_id` INT NOT NULL AUTO_INCREMENT,
  `grades_value` DECIMAL(3,3) NOT NULL,
  `grades_course_id` INT NULL,
  `grades_student_id` INT NULL,
  PRIMARY KEY (`grades_id`),
  UNIQUE INDEX `grades_id_UNIQUE` (`grades_id` ASC) VISIBLE);

ALTER TABLE `devcamp_sql_project`.`grades` 
ADD INDEX `grades_course_id_idx` (`grades_course_id` ASC) VISIBLE,
ADD INDEX `grades_student_id_idx` (`grades_student_id` ASC) VISIBLE;
;
ALTER TABLE `devcamp_sql_project`.`grades` 
ADD CONSTRAINT `grades_course_id`
  FOREIGN KEY (`grades_course_id`)
  REFERENCES `devcamp_sql_project`.`course` (`course_id`)
  ON DELETE CASCADE
  ON UPDATE NO ACTION,
ADD CONSTRAINT `grades_student_id`
  FOREIGN KEY (`grades_student_id`)
  REFERENCES `devcamp_sql_project`.`students` (`students_id`)
  ON DELETE CASCADE
  ON UPDATE NO ACTION;


USE devcamp_project_schema;

INSERT INTO
students(students_name)
VALUES
("Paula");

INSERT INTO
students(students_name)
VALUES
("Jorge");

INSERT INTO
students(students_name)
VALUES
("Hunter");

INSERT INTO
students(students_name)
VALUES
("Curtis");

INSERT INTO
students(students_name)
VALUES
("Trista");

INSERT INTO
professors(professors_name)
VALUES
("James");

INSERT INTO
professors(professors_name)
VALUES
("Ann");

INSERT INTO
professors(professors_name)
VALUES
("Eugene");

INSERT INTO
professors(professors_name)
VALUES
("Tabatha");

INSERT INTO
professors(professors_name)
VALUES
("Jeff");

INSERT INTO
course(course_name, course_professors_id)
VALUES
("Math", 1);

INSERT INTO
course(course_name, course_professors_id)
VALUES
("English", 2);

INSERT INTO
course(course_name, course_professors_id)
VALUES
("History", 3);

INSERT INTO
course(course_name, course_professors_id)
VALUES
("Science", 4);

INSERT INTO
course(course_name, course_professors_id)
VALUES
("Physical Education", 5);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 1, 1);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 1, 2);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 1, 3);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 1, 4);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 1, 5);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 2, 1);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 2, 2);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 2, 3);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 2, 4);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 2, 5);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 3, 1);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 3, 2);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 3, 3);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 3, 4);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 3, 5);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 4, 1);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 4, 2);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 4, 3);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 4, 4);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 4, 5);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 5, 1);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 5, 2);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 5, 3);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 5, 4);

INSERT INTO
grades(grades_value, grades_course_id, grades_student_id)
VALUES
(Rand(), 5, 5);

—AVG—

SELECT AVG(grades_value)
FROM grades
WHERE grades_course_id = (
SELECT course_professors_id
FROM course
WHERE course_professors_id = (
SELECT professors_id
FROM professors
WHERE professors_name = "James"));

SELECT AVG(grades_value)
FROM grades
WHERE grades_course_id = (
SELECT course_professors_id
FROM course
WHERE course_professors_id = (
SELECT professors_id
FROM professors
WHERE professors_name = “Eugene”));

SELECT AVG(grades_value)
FROM grades
WHERE grades_course_id = (
SELECT course_professors_id
FROM course
WHERE course_professors_id = (
SELECT professors_id
FROM professors
WHERE professors_name = “Tabatha”));

SELECT AVG(grades_value)
FROM grades
WHERE grades_course_id = (
SELECT course_professors_id
FROM course
WHERE course_professors_id = (
SELECT professors_id
FROM professors
WHERE professors_name = “Jeff”));
SELECT AVG(grades_value)
FROM grades
WHERE grades_course_id = (
SELECT course_professors_id
FROM course
WHERE course_professors_id = (
SELECT professors_id
FROM professors
WHERE professors_name = "Ann"));

—Top grade—

SELECT MAX(grades_value)
FROM grades
WHERE grades_student_id = (
SELECT students_id
FROM students
WHERE students_name = "Paula");

SELECT MAX(grades_value)
FROM grades
WHERE grades_student_id = (
SELECT students_id
FROM students
WHERE students_name = “Jorge”);

SELECT MAX(grades_value)
FROM grades
WHERE grades_student_id = (
SELECT students_id
FROM students
WHERE students_name = “Hunter”);

SELECT MAX(grades_value)
FROM grades
WHERE grades_student_id = (
SELECT students_id
FROM students
WHERE students_name = “Curtis);

SELECT MAX(grades_value)
FROM grades
WHERE grades_student_id = (
SELECT students_id
FROM students
WHERE students_name = “Trista”);

—group students and courses—

SELECT students_name, course_name
FROM students
JOIN grades ON grades.grades_student_id = students_id
JOIN course ON course.course_id = grades_course_id
ORDER BY course_name;

—summary report of courses and avg grades—

SELECT course_name, AVG(grades_value)
FROM course c
JOIN grades g
ON c.course_id = g.grades_course_id
GROUP BY course_name
ORDER BY AVG(grades_value) ASC;

—student and professor common courses—

SELECT students_name AS "Student", professors_name AS "Professor"
FROM grades
JOIN students ON grades.grades_student_id = students_id
JOIN course ON grades.grades_course_id = course_id
JOIN professors ON course.course_professors_id = professors_id
ORDER BY grades_student_id, course_professors_id ASC;
